VAGRANTFILE_API_VERSION = "2"

ENV['VAGRANT_DEFAULT_PROVIDER'] = 'docker'

require 'yaml'

subsystems = ['sales', 'invoicing', 'shipping']

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.define "ecommerce-eventstore" do |es|
    es.vm.provider "docker" do |docker|

      # docker.force_host_vm = true
      # docker.vagrant_vagrantfile = "./host/Vagrantfile"

      docker.name     = "ecommerce-eventstore"
      docker.image    = "ruudud/eventstore:3.4.0"
      docker.ports    = ['2113:2113', '1113:1113']
    end
  end

  config.vm.define "ecommerce-view-store" do |vs|
    vs.vm.provider "docker" do |docker|

      # docker.force_host_vm = true
      # docker.vagrant_vagrantfile = "./host/Vagrantfile"

      docker.name     = "ecommerce-view-store"
      docker.image    = "postgres"
      docker.ports    = ['5432:5432']
    end
  end


  subsystems.each do |subsystem|
    containers = YAML.load_file("../" + subsystem + '/containers.yml')

    containers.each do |container|
      config.vm.define container["name"] do |cntnr|

        # Disable synced folders for the Docker container (prevents an NFS error on "vagrant up")
        cntnr.vm.synced_folder ".", "/vagrant", disabled: true

        cntnr.vm.provider "docker" do |docker|

          port = container["port"]

          # docker.force_host_vm = true
          # docker.vagrant_vagrantfile = "./host/Vagrantfile"

          docker.name = container["name"]
          docker.build_dir = "../" + subsystem + "/" + container["role"] + "/target/docker/stage"
          docker.create_args = ['--net=host']

          if port
            docker.env = {"APP_CLUSTER_SEED" => "akka.tcp://ecommerce@127.0.0.1:" + port.to_s}.merge(container["env"] || {})
            docker.ports = [port.to_s + ":" + port.to_s]
          end
        end
      end
    end
  end

  # triggers (https://github.com/emyl/vagrant-triggers)

  config.trigger.after :up, :vm => ["ecommerce-eventstore"] do
    info "Enabling system projections"
    sleep(5)
    run "curl -v -u admin:changeit --data '' 'http://localhost:2113/projection/$by_category/command/enable'"

    info "Installing user projections"
    run "curl -v -H 'Content-Type: application/json' -u admin:changeit --data @../invoicing/write-back/src/main/resources/projections/clock.js http://127.0.0.1:2113/projections/continuous?name=clock_proj&type=JS&emit=1"
    run "curl -v -H 'Content-Type: application/json' -u admin:changeit --data @../invoicing/write-back/src/main/resources/projections/invoicing-process.js http://127.0.0.1:2113/projections/continuous?name=invoicing_process_proj&type=JS&emit=1"
    run "curl -v -H 'Content-Type: application/json' -u admin:changeit --data @../invoicing/write-back/src/main/resources/projections/current-deadlines.js http://127.0.0.1:2113/projections/continuous?name=current_deadlines_proj&type=JS&emit=1"
    run "curl -v -H 'Content-Type: application/json' -u admin:changeit --data @../sales/write-back/src/main/resources/projections/order-process.js http://127.0.0.1:2113/projections/continuous?name=order_process_proj&type=JS&emit=1"
  end

end